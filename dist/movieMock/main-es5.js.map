{"version":3,"sources":["webpack:///src/app/store/reducer.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/services/movie.service.ts","webpack:///src/app/store/actions.ts","webpack:///src/app/services/session_storage.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/routes.ts","webpack:///src/app/components/error-handler/error-handler.component.ts","webpack:///src/app/components/error-handler/error-handler.component.html","webpack:///src/app/store/effects.ts","webpack:///src/app/components/movie-card/movie-card.component.ts","webpack:///src/app/components/movie-card/movie-card.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["initialState","movieName","undefined","results","movies","error","movieReducer","state","result","imdbID","selectMovieState","selectMovieList","selectMovieDetailsByimdbID","selectErrorMessage","environment","production","apiKey","updateDecade$","HomeComponent","store","movieDetailsHash","currentSelectedDecade","movieList$","select","pipe","reduce","accum","movie","movieListFilteredByYear$","year","filter","yearAsNumber","Number","Year","errorMessage$","message","decades","dispatch","searchTerm","toClear","clearErrorMessage","selector","templateUrl","styleUrls","MovieService","httpClient","sessionStorageService","API_KEY","page","sessionStorageValue","getFromSessionStorage","get","Search","addToSessionStorage","MovieActionTypes","GetAllMovies","GET_ALL_MOVIES","GetAllMoviesSuccess","GET_ALL_MOVIES_SUCCESS","GetAllMoviesFail","GET_ALL_MOVIES_FAIL","GetMovie","GET_MOVIE","GetMovieSuccess","GET_MOVIE_SUCCESS","GetMovieFail","GET_MOVIE_FAIL","ClearErrorMessage","CLEAR_ERROR_MESSAGE","SessionStorageService","window","sessionStorage","test","setItem","getItem","removeItem","e","key","item","checkSessionStorage","JSON","stringify","console","parse","AppComponent","title","AppModule","forRoot","router","instrument","maxAge","logOnly","declarations","imports","providers","bootstrap","routes","path","pathMatch","component","ErrorHandlerComponent","_errorMessage","clearErrorMessageEvent","errorMessage","emit","changeDetection","OnPush","MovieEffects","actions$","movieService","getMovies$","getMovies","getMovieSuccess$","map","getMovieDetails$","movieDetails","getMovieById","MovieCardComponent","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {createReducer, createSelector, on} from '@ngrx/store';\nimport { MovieLite, MovieFull } from '../models';\nimport * as MovieActions from './actions';\n\n\nexport interface State {\n  movieName: string;\n  results: MovieLite[];\n  movies: {\n    [key: string]: MovieFull\n  };\n  error: string;\n}\n\nexport const initialState = {\n  movieName: undefined,\n  results: [],\n  movies: {},\n  error: null\n};\n\nexport const movieReducer = createReducer(\n  initialState,\n  on(MovieActions.GetAllMoviesSuccess, (state: State, {results}: {results: MovieLite[]}) => {\n    return {...state, results: [...state.results, ...results]};\n  }),\n  on(MovieActions.GetMovieSuccess, (state, {result}: {result: MovieFull}) => {\n    return {...state, movies: {...state.movies, [result.imdbID]: result}};\n  }),\n  on(MovieActions.ClearErrorMessage, (state) => ({...state, error: undefined})),\n  on(MovieActions.GetMovieFail, MovieActions.GetAllMoviesFail, (state, {error}) => {\n    return {...state, error};\n  })\n);\n\nexport const selectMovieState = (state: {movies: State}) => state.movies;\n\nexport const selectMovieList = createSelector(\n  selectMovieState,\n  (state: State) => state.results\n);\n\nexport const selectMovieDetailsByimdbID = (imdbID: string) => {\n  return createSelector(\n    selectMovieState,\n    (state: State) => state.movies[imdbID]\n  );\n};\n\nexport const selectErrorMessage = createSelector(\n  selectMovieState,\n  (state: State) => state.error\n);\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiKey: '257c0840'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {ClearErrorMessage, GetAllMovies} from '../../store/actions';\nimport {selectErrorMessage, selectMovieDetailsByimdbID, selectMovieList} from '../../store/reducer';\nimport {filter, map, tap} from 'rxjs/operators';\nimport {BehaviorSubject, combineLatest, Observable} from 'rxjs';\nimport {MovieLite} from '../../models';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  public movieDetailsHash = {};\n  public currentSelectedDecade = 2010;\n  public updateDecade$: BehaviorSubject<number> = new BehaviorSubject(this.currentSelectedDecade);\n\n  private movieList$: Observable<MovieLite[]> = this.store.select(selectMovieList).pipe(\n    tap((movies) => {\n      this.movieDetailsHash = movies.reduce((accum, movie) => {\n        accum[movie.imdbID] = this.store.select(selectMovieDetailsByimdbID(movie.imdbID));\n        return accum;\n      }, {});\n    })\n  );\n\n  public movieListFilteredByYear$ = combineLatest([\n    this.updateDecade$,\n    this.movieList$\n  ]).pipe(\n    tap(([year]) => this.currentSelectedDecade = year),\n    map(([year, movies]) => {\n      return movies.filter((movie) => {\n        const yearAsNumber = Number(movie.Year);\n        // By subtracting the year by the module 10 value of it, we will clear what is in the 10's column,\n        // reducing a year to it's decade\n        return year === (yearAsNumber - yearAsNumber % 10);\n      });\n    })\n  );\n\n  public errorMessage$ = this.store.select(selectErrorMessage).pipe(\n    filter(message => !!message)\n  );\n\n  public decades = [2020, 2010, 2000, 1990, 1980, 1970, 1960, 1950, 1940];\n\n  constructor(private store: Store) {\n    this.store.dispatch(GetAllMovies({searchTerm: 'Batman'}));\n  }\n\n  clearErrorMessage(toClear: boolean): void {\n    if (toClear) {\n      this.store.dispatch(ClearErrorMessage());\n    }\n  }\n\n}\n","\n<header>\n  <h1>Welcome to the home of Batman movies!</h1>\n</header>\n<nav>\n  <button mat-flat-button\n          [disableRipple]=\"true\"\n          *ngFor=\"let decade of decades\"\n          [ngClass]=\"currentSelectedDecade === decade ? 'active': 'inactive'\"\n          [aria-pressed]=\"currentSelectedDecade === decade\"\n          (click)=\"updateDecade$.next(decade)\"\n  >\n     {{decade}}'s\n  </button>\n</nav>\n<app-error-handler [errorMessage]=\"errorMessage$ | async\" (clearErrorMessageEvent)=\"clearErrorMessage($event)\"></app-error-handler>\n<div class=\"movie-list\" *ngFor=\"let movie of movieListFilteredByYear$ | async\">\n  <app-movie-card\n    [movie]=\"movie\"\n    [movieDetails]=\"movieDetailsHash[movie.imdbID] | async\"\n  ></app-movie-card>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {map, tap} from 'rxjs/operators';\nimport {MovieFull, MovieLite} from '../models';\nimport {Observable, of} from 'rxjs';\nimport {SessionStorageService} from './session_storage.service';\n\n@Injectable()\nexport class MovieService {\n  private API_KEY = environment.apiKey;\n\n  constructor(private httpClient: HttpClient,\n              private sessionStorageService: SessionStorageService) {\n  }\n\n  getMovies(searchTerm: string, page: number = 1): Observable<MovieLite[]> {\n    const sessionStorageValue = this.sessionStorageService.getFromSessionStorage(searchTerm);\n    if (sessionStorageValue) {\n      return of(sessionStorageValue);\n    }\n    return this.httpClient.get(`http://www.omdbapi.com/?s=${searchTerm}&apikey=${this.API_KEY}&type=movie&page=${page}`).pipe(\n      map((results: {Search: MovieLite[]}) => results.Search ),\n      tap((results) => {\n        this.sessionStorageService.addToSessionStorage(searchTerm, results);\n      })\n    );\n  }\n\n  getMovieById(imdbID: string): Observable<MovieFull> {\n    const sessionStorageValue = this.sessionStorageService.getFromSessionStorage(imdbID);\n    if (sessionStorageValue) {\n      return of(sessionStorageValue);\n    }\n    return this.httpClient.get<MovieFull>(`http://www.omdbapi.com/?i=${imdbID}&apikey=${this.API_KEY}`).pipe(\n      tap((results) => {\n        this.sessionStorageService.addToSessionStorage(imdbID, results);\n      })\n    );\n  }\n}\n","import {createAction, props} from '@ngrx/store';\nimport {MovieFull, MovieLite} from '../models';\n\nexport enum MovieActionTypes {\n  GET_ALL_MOVIES = '[MOVIES API] GET ALL MOVIES',\n  GET_ALL_MOVIES_SUCCESS = '[MOVIES API] GET ALL MOVIES SUCCESS',\n  GET_ALL_MOVIES_FAIL = '[MOVIES_API] GET ALL MOVIES FAIL',\n  GET_MOVIE = '[MOVIES API] GET MOVIE',\n  GET_MOVIE_SUCCESS = '[MOVIES API] GET MOVIE SUCCESS',\n  GET_MOVIE_FAIL = '[MOVIES_API] GET MOVIE FAIL',\n  CLEAR_ERROR_MESSAGE = '[MOVIES ERROR] CLEAR ERROR MESSAGE'\n}\n\nexport const GetAllMovies = createAction(\n  MovieActionTypes.GET_ALL_MOVIES,\n  props<{searchTerm: string, page?: number}>()\n);\n\nexport const GetAllMoviesSuccess = createAction(\n  MovieActionTypes.GET_ALL_MOVIES_SUCCESS,\n  props<{results: MovieLite[], page?: number}>()\n);\n\nexport const GetAllMoviesFail = createAction(\n  MovieActionTypes.GET_ALL_MOVIES_FAIL,\n  props<{error: string}>()\n);\n\n\nexport const GetMovie = createAction(\n  MovieActionTypes.GET_MOVIE,\n  props<{imdbID: string}>()\n);\n\nexport const GetMovieSuccess = createAction(\n  MovieActionTypes.GET_MOVIE_SUCCESS,\n  props<{result: MovieFull}>()\n);\n\nexport const GetMovieFail = createAction(\n  MovieActionTypes.GET_MOVIE_FAIL,\n  props<{error: string}>()\n);\n\nexport const ClearErrorMessage = createAction(\n  MovieActionTypes.CLEAR_ERROR_MESSAGE\n);\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SessionStorageService {\n\n  constructor() {\n  }\n\n  checkSessionStorage(): boolean {\n    if (window.sessionStorage) {\n      const test = 'test';\n      try {\n        window.sessionStorage.setItem(test, test);\n        window.sessionStorage.getItem('test');\n        window.sessionStorage.removeItem('test');\n        return true;\n      } catch (e) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  addToSessionStorage(key: string, item: any): boolean {\n    try {\n      if (this.checkSessionStorage()) {\n        if (item) {\n\n          window.sessionStorage.setItem(key, JSON.stringify(item));\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        console.error('SessionStorage is unavailable');\n      }\n    } catch (e) {\n      console.error('Set Session storage error: ', e);\n    }\n  }\n\n  getFromSessionStorage(key): any {\n    try {\n      if (this.checkSessionStorage()) {\n        if (key) {\n          return JSON.parse(window.sessionStorage.getItem(key));\n        }\n      }\n      return false;\n    } catch (e) {\n      console.error('Get from Session storage error: ', e);\n      return false;\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'movieMock';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {routes} from './routes';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './components/home/home.component';\nimport {routerReducer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {environment} from '../environments/environment';\nimport {HttpClientModule} from '@angular/common/http';\nimport {movieReducer} from './store/reducer';\nimport {MovieEffects} from './store/effects';\nimport {MovieService} from './services/movie.service';\nimport { MovieCardComponent } from './components/movie-card/movie-card.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport {RouterModule} from '@angular/router';\nimport {SessionStorageService} from './services/session_storage.service';\nimport {ContentLoaderModule} from '@ngneat/content-loader';\nimport { ErrorHandlerComponent } from './components/error-handler/error-handler.component';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MovieCardComponent,\n    ErrorHandlerComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatButtonModule,\n    StoreModule.forRoot({movies: movieReducer, router: routerReducer}),\n    EffectsModule.forRoot([MovieEffects]),\n    StoreRouterConnectingModule.forRoot(),\n    RouterModule.forRoot(routes),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    BrowserAnimationsModule,\n    MatIconModule,\n    ContentLoaderModule\n  ],\n  providers: [MovieService, SessionStorageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport {HomeComponent} from './components/home/home.component';\n\nexport const routes: Routes = [\n  {path: '', pathMatch: 'full', component: HomeComponent }\n\n];\n\n","import {ChangeDetectionStrategy, Component, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-error-handler',\n  templateUrl: './error-handler.component.html',\n  styleUrls: ['./error-handler.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ErrorHandlerComponent {\n\n  constructor() { }\n\n  // tslint:disable-next-line:variable-name\n  private _errorMessage = '';\n  @Input('errorMessage')\n  set errorMessage(message: string) {\n    this._errorMessage = message;\n  }\n  get errorMessage(): string {\n    return this._errorMessage;\n  }\n\n  @Output() clearErrorMessageEvent: EventEmitter<boolean> = new EventEmitter();\n  clearMessage(): void {\n    this.errorMessage = '';\n    this.clearErrorMessageEvent.emit(true);\n  }\n}\n","<div class=\"errorHandler\" *ngIf=\"errorMessage\">\n  <p>{{errorMessage}}</p>\n  <button mat-fab (click)=\"clearMessage()\" aria-label=\"Close error message\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n","import {Injectable} from '@angular/core';\nimport { MovieService } from '../services/movie.service';\nimport { createEffect, ofType, Actions } from '@ngrx/effects';\nimport * as MovieActions from './actions';\nimport {catchError, filter, map, mergeMap} from 'rxjs/operators';\nimport {MovieFull, MovieLite} from '../models';\nimport {of, race} from 'rxjs';\nimport {selectMovieDetailsByimdbID} from './reducer';\nimport {Store} from '@ngrx/store';\n\n\n@Injectable()\nexport class MovieEffects {\n\n  getMovies$ = createEffect(() => this.actions$.pipe(\n    ofType(MovieActions.GetAllMovies),\n    mergeMap(({searchTerm}) => this.movieService.getMovies(searchTerm).pipe(\n      map((results: MovieLite[]) => {\n\n        return MovieActions.GetAllMoviesSuccess({results});\n      }),\n      catchError(() => {\n        return of(MovieActions.GetAllMoviesFail({error: `Failed to retrieve movies for search term: ${searchTerm}`}));\n      })\n    ))\n  ));\n\n  getMovieSuccess$ = createEffect(() => this.actions$.pipe(\n    ofType(MovieActions.GetAllMoviesSuccess),\n    mergeMap(({results}) => {\n        return results.map(({imdbID}) => {\n          return MovieActions.GetMovie({imdbID});\n        });\n    })\n  ));\n\n  getMovieDetails$ = createEffect(() => this.actions$.pipe(\n    ofType(MovieActions.GetMovie),\n    mergeMap(({imdbID}) => {\n      return race<any>([\n        this.store.select(selectMovieDetailsByimdbID(imdbID)).pipe(\n          filter((movieDetails) => !!movieDetails),\n          map((movieDetails: MovieFull) => MovieActions.GetMovieSuccess({result: movieDetails})),\n        ),\n        this.movieService.getMovieById(imdbID).pipe(\n          map((movieDetails: MovieFull) => MovieActions.GetMovieSuccess({result: movieDetails})),\n          catchError(() => of(MovieActions.GetMovieFail({error: `Failed to retrieve data for movie with id: ${imdbID}`})))\n\n      )\n      ]);\n    })\n  ));\n\n\n  constructor(\n    private actions$: Actions,\n    private movieService: MovieService,\n    private store: Store\n  ) {}\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {MovieFull, MovieLite} from '../../models';\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MovieCardComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() movie: MovieLite;\n\n  @Input() movieDetails: MovieFull;\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"movie-card\" *ngIf=\"movie\">\n  <div class=\"movie-card-left-column\">\n    <img [src]=\"movie.Poster\" [alt]=\"movie.Title + ' poster'\" onerror=\"this.onerror=null;this.src='/assets/lego_batman.jpeg';\"/>\n  </div>\n  <div class=\"movie-card-right-column\">\n    <div class=\"movie-data\">\n      <h2>{{movie.Title}}</h2>\n      <div class=\"content-bar\" *ngIf=\"movieDetails\">\n        <div class=\"rating-runtime\">\n          <p class=\"rating\">{{movieDetails?.Rated}}</p>\n          <p class=\"runtime\">{{movieDetails?.Runtime}}</p>\n        </div>\n        <p>{{movieDetails?.Released}}</p>\n      </div>\n      <p *ngIf=\"movieDetails\">{{movieDetails?.Plot}}</p>\n      <list-content-loader primaryColor=\"#8D989E\" *ngIf=\"!movieDetails\"></list-content-loader>\n    </div>\n    <div class=\"action-items\">\n      <a class=\"imdb-link\"mat-flat-button [disableRipple]=\"true\" [href]=\"'https://www.imdb.com/title/' + movie.imdbID\" target=\"_blank\">View on IMDB</a>\n    </div>\n  </div>\n\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}