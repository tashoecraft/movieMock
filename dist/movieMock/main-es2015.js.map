{"version":3,"sources":["./src/app/store/reducer.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/movie.service.ts","./src/app/store/actions.ts","./src/app/services/session_storage.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/routes.ts","./src/app/components/error-handler/error-handler.component.ts","./src/app/components/error-handler/error-handler.component.html","./src/app/store/effects.ts","./src/app/components/movie-card/movie-card.component.ts","./src/app/components/movie-card/movie-card.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {createReducer, createSelector, on} from '@ngrx/store';\nimport { MovieLite, MovieFull } from '../models';\nimport * as MovieActions from './actions';\n\n\nexport interface State {\n  movieName: string;\n  results: MovieLite[];\n  movies: {\n    [key: string]: MovieFull\n  };\n  error: string;\n}\n\nexport const initialState = {\n  movieName: undefined,\n  results: [],\n  movies: {},\n  error: null\n};\n\nexport const movieReducer = createReducer(\n  initialState,\n  on(MovieActions.GetAllMoviesSuccess, (state: State, {results}: {results: MovieLite[]}) => {\n    return {...state, results: [...state.results, ...results]};\n  }),\n  on(MovieActions.GetMovieSuccess, (state, {result}: {result: MovieFull}) => {\n    return {...state, movies: {...state.movies, [result.imdbID]: result}};\n  }),\n  on(MovieActions.ClearErrorMessage, (state) => ({...state, error: undefined})),\n  on(MovieActions.GetMovieFail, MovieActions.GetAllMoviesFail, (state, {error}) => {\n    return {...state, error};\n  })\n);\n\nexport const selectMovieState = (state: {movies: State}) => state.movies;\n\nexport const selectMovieList = createSelector(\n  selectMovieState,\n  (state: State) => state.results\n);\n\nexport const selectMovieDetailsByimdbID = (imdbID: string) => {\n  return createSelector(\n    selectMovieState,\n    (state: State) => state.movies[imdbID]\n  );\n};\n\nexport const selectErrorMessage = createSelector(\n  selectMovieState,\n  (state: State) => state.error\n);\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiKey: '257c0840'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {ClearErrorMessage, GetAllMovies} from '../../store/actions';\nimport {selectErrorMessage, selectMovieDetailsByimdbID, selectMovieList} from '../../store/reducer';\nimport {filter, map, tap} from 'rxjs/operators';\nimport {BehaviorSubject, combineLatest, Observable} from 'rxjs';\nimport {MovieLite} from '../../models';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  public movieDetailsHash = {};\n  public currentSelectedDecade = 2010;\n  public updateDecade$: BehaviorSubject<number> = new BehaviorSubject(this.currentSelectedDecade);\n\n  private movieList$: Observable<MovieLite[]> = this.store.select(selectMovieList).pipe(\n    tap((movies) => {\n      this.movieDetailsHash = movies.reduce((accum, movie) => {\n        accum[movie.imdbID] = this.store.select(selectMovieDetailsByimdbID(movie.imdbID));\n        return accum;\n      }, {});\n    })\n  );\n\n  public movieListFilteredByYear$ = combineLatest([\n    this.updateDecade$,\n    this.movieList$\n  ]).pipe(\n    tap(([year]) => this.currentSelectedDecade = year),\n    map(([year, movies]) => {\n      return movies.filter((movie) => {\n        const yearAsNumber = Number(movie.Year);\n        // By subtracting the year by the module 10 value of it, we will clear what is in the 10's column,\n        // reducing a year to it's decade\n        return year === (yearAsNumber - yearAsNumber % 10);\n      });\n    })\n  );\n\n  public errorMessage$ = this.store.select(selectErrorMessage).pipe(\n    filter(message => !!message)\n  );\n\n  public decades = [2020, 2010, 2000, 1990, 1980, 1970, 1960, 1950, 1940];\n\n  constructor(private store: Store) {\n    this.store.dispatch(GetAllMovies({searchTerm: 'Batman'}));\n  }\n\n  clearErrorMessage(toClear: boolean): void {\n    if (toClear) {\n      this.store.dispatch(ClearErrorMessage());\n    }\n  }\n\n}\n","\n<header>\n  <h1>Welcome to the home of Batman movies!</h1>\n</header>\n<nav>\n  <button mat-flat-button\n          [disableRipple]=\"true\"\n          *ngFor=\"let decade of decades\"\n          [ngClass]=\"currentSelectedDecade === decade ? 'active': 'inactive'\"\n          [aria-pressed]=\"currentSelectedDecade === decade\"\n          (click)=\"updateDecade$.next(decade)\"\n  >\n     {{decade}}'s\n  </button>\n</nav>\n<app-error-handler [errorMessage]=\"errorMessage$ | async\" (clearErrorMessageEvent)=\"clearErrorMessage($event)\"></app-error-handler>\n<div class=\"movie-list\" *ngFor=\"let movie of movieListFilteredByYear$ | async\">\n  <app-movie-card\n    [movie]=\"movie\"\n    [movieDetails]=\"movieDetailsHash[movie.imdbID] | async\"\n  ></app-movie-card>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {map, tap} from 'rxjs/operators';\nimport {MovieFull, MovieLite} from '../models';\nimport {Observable, of} from 'rxjs';\nimport {SessionStorageService} from './session_storage.service';\n\n@Injectable()\nexport class MovieService {\n  private API_KEY = environment.apiKey;\n\n  constructor(private httpClient: HttpClient,\n              private sessionStorageService: SessionStorageService) {\n  }\n\n  getMovies(searchTerm: string, page: number = 1): Observable<MovieLite[]> {\n    const sessionStorageValue = this.sessionStorageService.getFromSessionStorage(searchTerm);\n    if (sessionStorageValue) {\n      return of(sessionStorageValue);\n    }\n    return this.httpClient.get(`http://www.omdbapi.com/?s=${searchTerm}&apikey=${this.API_KEY}&type=movie&page=${page}`).pipe(\n      map((results: {Search: MovieLite[]}) => results.Search ),\n      tap((results) => {\n        this.sessionStorageService.addToSessionStorage(searchTerm, results);\n      })\n    );\n  }\n\n  getMovieById(imdbID: string): Observable<MovieFull> {\n    const sessionStorageValue = this.sessionStorageService.getFromSessionStorage(imdbID);\n    if (sessionStorageValue) {\n      return of(sessionStorageValue);\n    }\n    return this.httpClient.get<MovieFull>(`http://www.omdbapi.com/?i=${imdbID}&apikey=${this.API_KEY}`).pipe(\n      tap((results) => {\n        this.sessionStorageService.addToSessionStorage(imdbID, results);\n      })\n    );\n  }\n}\n","import {createAction, props} from '@ngrx/store';\nimport {MovieFull, MovieLite} from '../models';\n\nexport enum MovieActionTypes {\n  GET_ALL_MOVIES = '[MOVIES API] GET ALL MOVIES',\n  GET_ALL_MOVIES_SUCCESS = '[MOVIES API] GET ALL MOVIES SUCCESS',\n  GET_ALL_MOVIES_FAIL = '[MOVIES_API] GET ALL MOVIES FAIL',\n  GET_MOVIE = '[MOVIES API] GET MOVIE',\n  GET_MOVIE_SUCCESS = '[MOVIES API] GET MOVIE SUCCESS',\n  GET_MOVIE_FAIL = '[MOVIES_API] GET MOVIE FAIL',\n  CLEAR_ERROR_MESSAGE = '[MOVIES ERROR] CLEAR ERROR MESSAGE'\n}\n\nexport const GetAllMovies = createAction(\n  MovieActionTypes.GET_ALL_MOVIES,\n  props<{searchTerm: string, page?: number}>()\n);\n\nexport const GetAllMoviesSuccess = createAction(\n  MovieActionTypes.GET_ALL_MOVIES_SUCCESS,\n  props<{results: MovieLite[], page?: number}>()\n);\n\nexport const GetAllMoviesFail = createAction(\n  MovieActionTypes.GET_ALL_MOVIES_FAIL,\n  props<{error: string}>()\n);\n\n\nexport const GetMovie = createAction(\n  MovieActionTypes.GET_MOVIE,\n  props<{imdbID: string}>()\n);\n\nexport const GetMovieSuccess = createAction(\n  MovieActionTypes.GET_MOVIE_SUCCESS,\n  props<{result: MovieFull}>()\n);\n\nexport const GetMovieFail = createAction(\n  MovieActionTypes.GET_MOVIE_FAIL,\n  props<{error: string}>()\n);\n\nexport const ClearErrorMessage = createAction(\n  MovieActionTypes.CLEAR_ERROR_MESSAGE\n);\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SessionStorageService {\n\n  constructor() {\n  }\n\n  checkSessionStorage(): boolean {\n    if (window.sessionStorage) {\n      const test = 'test';\n      try {\n        window.sessionStorage.setItem(test, test);\n        window.sessionStorage.getItem('test');\n        window.sessionStorage.removeItem('test');\n        return true;\n      } catch (e) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  addToSessionStorage(key: string, item: any): boolean {\n    try {\n      if (this.checkSessionStorage()) {\n        if (item) {\n\n          window.sessionStorage.setItem(key, JSON.stringify(item));\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        console.error('SessionStorage is unavailable');\n      }\n    } catch (e) {\n      console.error('Set Session storage error: ', e);\n    }\n  }\n\n  getFromSessionStorage(key): any {\n    try {\n      if (this.checkSessionStorage()) {\n        if (key) {\n          return JSON.parse(window.sessionStorage.getItem(key));\n        }\n      }\n      return false;\n    } catch (e) {\n      console.error('Get from Session storage error: ', e);\n      return false;\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'movieMock';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {routes} from './routes';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './components/home/home.component';\nimport {routerReducer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {environment} from '../environments/environment';\nimport {HttpClientModule} from '@angular/common/http';\nimport {movieReducer} from './store/reducer';\nimport {MovieEffects} from './store/effects';\nimport {MovieService} from './services/movie.service';\nimport { MovieCardComponent } from './components/movie-card/movie-card.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport {RouterModule} from '@angular/router';\nimport {SessionStorageService} from './services/session_storage.service';\nimport {ContentLoaderModule} from '@ngneat/content-loader';\nimport { ErrorHandlerComponent } from './components/error-handler/error-handler.component';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MovieCardComponent,\n    ErrorHandlerComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatButtonModule,\n    StoreModule.forRoot({movies: movieReducer, router: routerReducer}),\n    EffectsModule.forRoot([MovieEffects]),\n    StoreRouterConnectingModule.forRoot(),\n    RouterModule.forRoot(routes),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    BrowserAnimationsModule,\n    MatIconModule,\n    ContentLoaderModule\n  ],\n  providers: [MovieService, SessionStorageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport {HomeComponent} from './components/home/home.component';\n\nexport const routes: Routes = [\n  {path: '', pathMatch: 'full', component: HomeComponent }\n\n];\n\n","import {ChangeDetectionStrategy, Component, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-error-handler',\n  templateUrl: './error-handler.component.html',\n  styleUrls: ['./error-handler.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ErrorHandlerComponent {\n\n  constructor() { }\n\n  // tslint:disable-next-line:variable-name\n  private _errorMessage = '';\n  @Input('errorMessage')\n  set errorMessage(message: string) {\n    this._errorMessage = message;\n  }\n  get errorMessage(): string {\n    return this._errorMessage;\n  }\n\n  @Output() clearErrorMessageEvent: EventEmitter<boolean> = new EventEmitter();\n  clearMessage(): void {\n    this.errorMessage = '';\n    this.clearErrorMessageEvent.emit(true);\n  }\n}\n","<div class=\"errorHandler\" *ngIf=\"errorMessage\">\n  <p>{{errorMessage}}</p>\n  <button mat-fab (click)=\"clearMessage()\" aria-label=\"Close error message\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n","import {Injectable} from '@angular/core';\nimport { MovieService } from '../services/movie.service';\nimport { createEffect, ofType, Actions } from '@ngrx/effects';\nimport * as MovieActions from './actions';\nimport {catchError, filter, map, mergeMap} from 'rxjs/operators';\nimport {MovieFull, MovieLite} from '../models';\nimport {of, race} from 'rxjs';\nimport {selectMovieDetailsByimdbID} from './reducer';\nimport {Store} from '@ngrx/store';\n\n\n@Injectable()\nexport class MovieEffects {\n\n  getMovies$ = createEffect(() => this.actions$.pipe(\n    ofType(MovieActions.GetAllMovies),\n    mergeMap(({searchTerm}) => this.movieService.getMovies(searchTerm).pipe(\n      map((results: MovieLite[]) => {\n\n        return MovieActions.GetAllMoviesSuccess({results});\n      }),\n      catchError(() => {\n        return of(MovieActions.GetAllMoviesFail({error: `Failed to retrieve movies for search term: ${searchTerm}`}));\n      })\n    ))\n  ));\n\n  getMovieSuccess$ = createEffect(() => this.actions$.pipe(\n    ofType(MovieActions.GetAllMoviesSuccess),\n    mergeMap(({results}) => {\n        return results.map(({imdbID}) => {\n          return MovieActions.GetMovie({imdbID});\n        });\n    })\n  ));\n\n  getMovieDetails$ = createEffect(() => this.actions$.pipe(\n    ofType(MovieActions.GetMovie),\n    mergeMap(({imdbID}) => {\n      return race<any>([\n        this.store.select(selectMovieDetailsByimdbID(imdbID)).pipe(\n          filter((movieDetails) => !!movieDetails),\n          map((movieDetails: MovieFull) => MovieActions.GetMovieSuccess({result: movieDetails})),\n        ),\n        this.movieService.getMovieById(imdbID).pipe(\n          map((movieDetails: MovieFull) => MovieActions.GetMovieSuccess({result: movieDetails})),\n          catchError(() => of(MovieActions.GetMovieFail({error: `Failed to retrieve data for movie with id: ${imdbID}`})))\n\n      )\n      ]);\n    })\n  ));\n\n\n  constructor(\n    private actions$: Actions,\n    private movieService: MovieService,\n    private store: Store\n  ) {}\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {MovieFull, MovieLite} from '../../models';\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MovieCardComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() movie: MovieLite;\n\n  @Input() movieDetails: MovieFull;\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"movie-card\" *ngIf=\"movie\">\n  <div class=\"movie-card-left-column\">\n    <img [src]=\"movie.Poster\" [alt]=\"movie.Title + ' poster'\" onerror=\"this.onerror=null;this.src='/assets/lego_batman.jpeg';\"/>\n  </div>\n  <div class=\"movie-card-right-column\">\n    <div class=\"movie-data\">\n      <h2>{{movie.Title}}</h2>\n      <div class=\"content-bar\" *ngIf=\"movieDetails\">\n        <div class=\"rating-runtime\">\n          <p class=\"rating\">{{movieDetails?.Rated}}</p>\n          <p class=\"runtime\">{{movieDetails?.Runtime}}</p>\n        </div>\n        <p>{{movieDetails?.Released}}</p>\n      </div>\n      <p *ngIf=\"movieDetails\">{{movieDetails?.Plot}}</p>\n      <list-content-loader primaryColor=\"#8D989E\" *ngIf=\"!movieDetails\"></list-content-loader>\n    </div>\n    <div class=\"action-items\">\n      <a class=\"imdb-link\"mat-flat-button [disableRipple]=\"true\" [href]=\"'https://www.imdb.com/title/' + movie.imdbID\" target=\"_blank\">View on IMDB</a>\n    </div>\n  </div>\n\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}